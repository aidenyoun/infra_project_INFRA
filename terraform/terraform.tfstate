{
  "version": 4,
  "terraform_version": "1.9.5",
  "serial": 12,
  "lineage": "8a78727b-5438-f8e5-882a-e7f5758445b5",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "api_project",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "atomic": false,
            "chart": "../helm/api-project",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "api-project",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "1.0.0",
                "chart": "api-project",
                "name": "api-project",
                "namespace": "default",
                "revision": 1,
                "values": "{\"affinity\":{},\"autoscaling\":{\"enabled\":false,\"maxReplicas\":100,\"minReplicas\":1,\"targetCPUUtilizationPercentage\":80},\"fullnameOverride\":\"\",\"image\":{\"pullPolicy\":\"Never\",\"repository\":\"api-project\",\"tag\":\"latest\"},\"imagePullSecrets\":[],\"ingress\":{\"annotations\":{},\"className\":\"\",\"enabled\":false,\"hosts\":[{\"host\":\"chart-example.local\",\"paths\":[{\"path\":\"/\",\"pathType\":\"ImplementationSpecific\"}]}],\"tls\":[]},\"livenessProbe\":{\"httpGet\":{\"path\":\"/health\",\"port\":\"http\"}},\"nameOverride\":\"\",\"nodeSelector\":{},\"podAnnotations\":{},\"podLabels\":{},\"podSecurityContext\":{},\"readinessProbe\":{\"httpGet\":{\"path\":\"/health\",\"port\":\"http\"}},\"replicaCount\":1,\"resources\":{},\"securityContext\":{},\"service\":{\"port\":80,\"type\":\"ClusterIP\"},\"serviceAccount\":{\"annotations\":{},\"automount\":true,\"create\":true,\"name\":\"\"},\"tolerations\":[],\"volumeMounts\":[{\"mountPath\":\"/app/db\",\"name\":\"sqlite-storage\"}],\"volumes\":[{\"emptyDir\":{},\"name\":\"sqlite-storage\"}]}",
                "version": "0.1.0"
              }
            ],
            "name": "api-project",
            "namespace": "default",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": null,
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "# values.yaml\n\nreplicaCount: 1\n\nimage:\n  repository: api-project\n  tag: latest\n  pullPolicy: Never  # 로컬 이미지를 사용하기 위해 설정\n\nimagePullSecrets: []\n\nnameOverride: \"\"\nfullnameOverride: \"\"\n\nserviceAccount:\n  create: true\n  automount: true\n  annotations: {}\n  name: \"\"\n\npodAnnotations: {}\npodLabels: {}\n\npodSecurityContext: {}\nsecurityContext: {}\n\nservice:\n  type: ClusterIP\n  port: 80\n\ningress:\n  enabled: false\n  className: \"\"\n  annotations: {}\n  hosts:\n    - host: chart-example.local\n      paths:\n        - path: /\n          pathType: ImplementationSpecific\n  tls: []\n\nresources: {}\n  # limits:\n  #   cpu: 100m\n  #   memory: 128Mi\n  # requests:\n  #   cpu: 100m\n  #   memory: 128Mi\n\nlivenessProbe:\n  httpGet:\n    path: /health  \n    port: http\nreadinessProbe:\n  httpGet:\n    path: /health\n    port: http\n\nautoscaling:\n  enabled: false\n  minReplicas: 1\n  maxReplicas: 100\n  targetCPUUtilizationPercentage: 80\n\nvolumes:\n  - name: sqlite-storage\n    emptyDir: {}\n\nvolumeMounts:\n  - name: sqlite-storage\n    mountPath: /app/db\n\nnodeSelector: {}\ntolerations: []\naffinity: {}\n"
            ],
            "verify": false,
            "version": "0.1.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "bnVsbA=="
        }
      ]
    }
  ],
  "check_results": null
}
